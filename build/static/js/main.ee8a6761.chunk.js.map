{"version":3,"sources":["components/quotes/QuoteForm.module.css","components/layout/MainNavigation.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/quotes/QuoteItem.module.css","components/UI/LoadingSpinner.module.css","components/quotes/NoQuotesFound.module.css","components/UI/Card.module.css","components/comments/Comments.module.css","components/quotes/HighlightedQuote.module.css","components/layout/Layout.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","hooks/hooks/use-http.js","lib/lib/api.js","components/UI/LoadingSpinner.js","components/quotes/NoQuotesFound.js","pages/AllQuotes.js","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js","components/comments/NewCommentForm.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/QuoteDetail.js","components/layout/MainNavigation.js","components/layout/Layout.js","pages/NotFound.js","App.js","index.js"],"names":["module","exports","QuoteItem","props","className","classes","item","text","author","to","id","QuoteList","history","useHistory","location","useLocation","queryParams","URLSearchParams","search","isSortingAscending","get","console","log","quotes","ascending","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","push","list","map","quote","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","a","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","LoadingSpinner","spinner","NoQuotesFound","noquotes","AllQuotes","loadedQuotes","useEffect","length","Card","card","children","QuoteForm","authorInputRef","useRef","textInputRef","useState","isEntering","setIsEntered","when","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","isLoading","loading","control","htmlFor","ref","rows","actions","onclick","NewQuote","NewCommentForm","commentTextRef","submitFormHandler","Comments","isAddingComment","setIsAddingComment","comments","HighlightedQuote","QuoteDetail","params","useParams","match","useRouteMatch","path","exact","MainNavigation","header","logo","nav","activeClassName","active","Layout","main","NotFound","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ee8a6761.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__1HVu_\",\"loading\":\"QuoteForm_loading__2RZmO\",\"control\":\"QuoteForm_control__1P2NN\",\"actions\":\"QuoteForm_actions__1Cz-Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__sY6_g\",\"logo\":\"MainNavigation_logo__39dew\",\"nav\":\"MainNavigation_nav__1NB-Y\",\"active\":\"MainNavigation_active__1R-ry\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__2ZZak\",\"loading\":\"NewCommentForm_loading__2_Hqt\",\"control\":\"NewCommentForm_control__okkO1\",\"actions\":\"NewCommentForm_actions__1YyXF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__32hOU\",\"sorting\":\"QuoteList_sorting__1N8V4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__3EtJN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__3a6-_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__vhLKq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__CrcWi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__1V12b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__2DBnc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__q6NfY\"};","import { Link } from 'react-router-dom';\nimport classes from './QuoteItem.module.css';\n\nconst QuoteItem = (props) => {\n\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className='btn' to={`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const queryParams = new URLSearchParams(location.search);\n\n  const isSortingAscending = queryParams.get('sort') === 'asc';\n\n  console.log(queryParams.get('sort') === 'asc');\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n  const changeSortingHandler = () => {\n    history.push('/quotes?sort=' + (isSortingAscending ? 'desc' : 'asc'));\n  };\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>Sort {isSortingAscending ? 'Descending' : 'Ascending'}!</button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN = 'https://react-quotes-e47c9-default-rtdb.firebaseio.com/';\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quote.');\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: 'POST',\n    body: JSON.stringify(quoteData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not create quote.');\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`, {\n    method: 'POST',\n    body: JSON.stringify(requestData.commentData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not add comment.');\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not get comments.');\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import classes from './NoQuotesFound.module.css';\nimport { Link } from 'react-router-dom';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className='btn' to='/new-quote'>\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import QuotesList from '../components/quotes/QuoteList';\r\nimport useHttp from '../hooks/hooks/use-http';\r\nimport { getAllQuotes } from '../lib/lib/api';\r\nimport { useEffect } from 'react';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\r\n\r\nconst DUMMY_QUOTES = [\r\n    { id: 'q1', author: 'Max', text: 'Learning React is Fun!' },\r\n    { id: 'q2', author: 'Tax', text: 'Learning React is Blahh!' },\r\n    { id: 'q3', author: 'Snax', text: 'Learning React is SHhhhhhhhh!' },\r\n\r\n];\r\n\r\nconst AllQuotes = () => {\r\n\r\n    const { sendRequest, status, data: loadedQuotes, error } = useHttp(getAllQuotes, true);\r\n\r\n    useEffect(()=>{\r\n        sendRequest();\r\n    },[sendRequest]);\r\n\r\n    if(status === 'pending') {\r\n        return (\r\n            <div className=\"centered\">\r\n                <LoadingSpinner />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if(error) {\r\n        return (\r\n            <p className='centered focused'>{error}</p>\r\n        )\r\n    }\r\n\r\n    if(status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)) {\r\n        return <NoQuotesFound />\r\n    }\r\n\r\n    return <QuotesList quotes={loadedQuotes}></QuotesList>\r\n};\r\n\r\nexport default AllQuotes;","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useRef, useState, Fragment } from 'react';\nimport { Prompt } from 'react-router-dom';\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n  const [isEntering, setIsEntered] = useState(false);\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  };\n\n  const formFocusHanlder = () => {\n    setIsEntered(true);\n  }\n\n  const finishEnteringHandler = () => {\n    setIsEntered(false);\n  }\n\n  return (\n    <Fragment>\n      <Prompt \n        when={isEntering}\n        message={(location) => 'Are you sure you want to leave ? All your unsaved work will be lost.'}\n      />\n      <Card>\n      <form onFocus={formFocusHanlder} className={classes.form} onSubmit={submitFormHandler}>\n        {props.isLoading && (\n          <div className={classes.loading}>\n            <LoadingSpinner />\n          </div>\n        )}\n\n        <div className={classes.control}>\n          <label htmlFor='author'>Author</label>\n          <input type='text' id='author' ref={authorInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='text'>Text</label>\n          <textarea id='text' rows='5' ref={textInputRef}></textarea>\n        </div>\n        <div className={classes.actions}>\n          <button onclick={finishEnteringHandler} className='btn'>Add Quote</button>\n        </div>\n      </form>\n    </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import QuoteForm from '../components/quotes/QuoteForm';\r\nimport { useHistory } from 'react-router-dom';\r\nimport useHttp from '../hooks/hooks/use-http';\r\nimport { addQuote } from '../lib/lib/api';\r\nimport { useEffect } from 'react';\r\n\r\nconst NewQuote = () => {\r\n\r\nconst { sendRequest, status} = useHttp(addQuote);    \r\nconst history = useHistory();\r\n\r\nuseEffect(() => {\r\n    if(status === 'completed') {\r\n        history.push('/quotes');\r\n    }\r\n}, [status, history]);\r\n\r\nconst addQuoteHandler = quoteData => {\r\n   sendRequest(quoteData);\r\n};\r\n\r\n    return <QuoteForm isLoading={status === 'pending'} onAddQuote={addQuoteHandler} />\r\n};\r\n\r\nexport default NewQuote;","import { useRef } from 'react';\n\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    // optional: Could validate here\n\n    // send comment to server\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import { useState } from 'react';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  \n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm />}\n      <p>Comments...</p>\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\r\nimport { Fragment, useEffect } from \"react\";\r\nimport Comments from '../components/comments/Comments';\r\nimport useHttp from '../hooks/hooks/use-http';\r\nimport HighLightesQuote from '../components/quotes/HighlightedQuote';\r\nimport { getSingleQuote } from'../lib/lib/api';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\r\n\r\nconst DUMMY_QUOTES = [\r\n    { id: 'q1', author: 'Max', text: 'Learning React is Fun!' },\r\n    { id: 'q2', author: 'Tax', text: 'Learning React is Blahh!' },\r\n    { id: 'q3', author: 'Snax', text: 'Learning React is SHhhhhhhhh!' },\r\n];\r\n\r\nconst QuoteDetail = () => {\r\n\r\n    const params  = useParams();\r\n    const match = useRouteMatch();\r\n\r\n    const { quoteId } = params;\r\n\r\n    const { sendRequest, status, data: loadedQuotes, error } = useHttp(getSingleQuote, true);\r\n\r\n    useEffect(()=>{\r\n        sendRequest(quoteId);\r\n    }, [sendRequest, quoteId]);\r\n\r\n    console.log(match);\r\n\r\n    if(status === 'pending') {\r\n        return (\r\n            <div className=\"centered\">\r\n                <LoadingSpinner />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if(error) {\r\n        return (\r\n            <p className='centered focused'>{error}</p>\r\n        )\r\n    }\r\n\r\n    if(!loadedQuotes.text) {\r\n        return <p>No Quote Found!</p>\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <HighLightesQuote text={loadedQuotes.text} author={loadedQuotes.author} />\r\n            <Route path={`/quotes/${params.quoteId}`} exact>\r\n                <div className='centered'>\r\n                    <Link className='btn--flat' to={`/quotes/${params.quoteId}/comments`}>Load Comments</Link>\r\n                </div>\r\n            </Route>\r\n            <Route path={`${match.path}/comments`}>\r\n                <Comments />\r\n            </Route>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default QuoteDetail;","import { NavLink } from \"react-router-dom\";\r\nimport classes from './MainNavigation.module.css'\r\n\r\nconst MainNavigation = () => {\r\n    return (\r\n        <header className={classes.header}>\r\n            <div className={classes.logo}>Great Quotes!</div>\r\n            <nav className={classes.nav}>\r\n                <ul>\r\n                    <li><NavLink to=\"/quotes\" activeClassName={classes.active}>All Quotes</NavLink></li>\r\n                    <li><NavLink to=\"/new-quote\" activeClassName={classes.active}>Add a Quote</NavLink></li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default MainNavigation;","import classes from './Layout.module.css';\r\nimport MainNavigation from './MainNavigation';\r\nimport { Fragment } from 'react';\r\n\r\nconst Layout = (props) => {\r\n    return <Fragment>\r\n        <MainNavigation />\r\n        <main className={classes.main}>{props.children}</main>\r\n    </Fragment>\r\n};\r\n\r\nexport default Layout;","const NotFound = () => {\r\n    return (\r\n        <div className='centered'>\r\n            <p>Page not Found!</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotFound;","import { Route, Switch, Redirect } from 'react-router-dom';\nimport AllQuotes from './pages/AllQuotes';\nimport NewQuote from './pages/NewQuote';\nimport QuoteDetail from './pages/QuoteDetail';\nimport Layout from './components/layout/Layout';\nimport NotFound from './pages/NotFound';\n\nfunction App() {\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/\" exact>\n          <Redirect to=\"/quotes\" />\n        </Route>\n        <Route path=\"/quotes\" exact>\n          <AllQuotes />\n        </Route>\n        <Route path=\"/quotes/:quoteId\">\n          <QuoteDetail />\n        </Route>\n        <Route path=\"/new-quote\">\n          <NewQuote />\n        </Route>\n        <Route path=\"*\">\n          <NotFound />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n<BrowserRouter>\n    <App />\n</BrowserRouter>\n, document.getElementById('root'));\n"],"sourceRoot":""}